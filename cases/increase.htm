<html>
  <head>
      <title>CORONAVIRUS CASES</title>
      <script src="https://d3js.org/d3.v5.min.js"></script>
      <script src="https://d3js.org/topojson.v2.min.js"></script>
      <meta name="viewport" content="width=1024">
      <meta charset="UTF-8" />
      <link rel="shortcut icon" href="favicon.ico" >
      <link rel="icon" href="../../icon.png" type="image/png" >
      <link href="https://fonts.googleapis.com/css2?family=Montserrat&family=Oswald&display=swap" rel="stylesheet">  
      <!-- <link rel="stylesheet" type="text/css" href="styles/all.css" media="all">     -->
      <link rel="stylesheet" type="text/css" href="../../styles/all.css" media="all">
  </head>
  <header style="padding-bottom: 140pt;">
    <nav>
      <ul>
        <li><a class='navtitle' href='../../index.htm'>Home</a></li>
        <li><a class='navtitle' href='../../visuals.htm'>Visuals</a></li>
        <li><a class = 'title1'>Ben Mayer</a></li>
        <li><a class='navtitle' href='../../about.htm'>About</a></li>
        <li><a class='navtitle' href='../../contact.htm'>Contact</a></li>
      </ul>
    </nav>
    </header>
  <body>
  <div class = 'backgroundzz'>
    <a class = "center aclass" href = "../../visuals.htm">GO BACK</a>
    <p id = "totalcount" class = "h2class">Total Cases Over Time By State</p>
    <p id = "graphs"></p>
    <table class = "table11">
        <thead>
            <tr>
                <td>State</td>
                <td>Change in Cases</td>
                <td>Percent Change</td>
                <td>Change in Deaths</td>
                <td>Percent Change</td>
            </tr>
        </thead>
        <tbody id = "addrow">
        </tbody>
    </table>
    <p id = "note"></p>
  </div>
  <script>
    const requestData = async function() {
        const stateData = await d3.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv");
        const countyData = await d3.csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv");
        
        countyData2 = countyData;

        var states = [];
        for(x = 0; x<stateData.length; x++){
            z = 0;
            for(y = 0; y<states.length; y++){
                if (stateData[x]['state'] != states[y]) {
                z = z + 1;
                }
            }
            if (z == states.length) {
                states.push(stateData[x]['state']);
            }
        }
        states.sort();

        coronaCounts = [];
        for(k = 0; k < states.length; k++){
            coronaCounts.push({"state":states[k],"cases":0,"changeInCases":0,"casesChangePerc":0,"deaths":0,"changeInDeaths":0,"deathsChangePerc":0});
        }

        all_months = [null,"January","February","March","April","May","June","July","August","September","October","November","December"];

        data_date = countyData[countyData.length-1]['date'];
        data_date_day = Number(data_date.substring(8,10));
        data_date_month = Number(data_date.substring(5,7));
        data_full_date = [data_date_day, data_date_month];
        yesterday = 0;
        yestermonth = 0;
        if (data_full_date[0] == 1) {
          if (data_full_date[1] == 3 || data_full_date[1] == 5 || data_full_date[1] == 8 || data_full_date[1] == 10) {
            yesterday = 30;
            yestermonth = data_full_date[1]-1;
          } else if (data_full_date[1] == 1) {
            yesterday = 29;
            yestermonth = data_full_date[1]-1;
          } else {
            yesterday = 31;
            yestermonth = data_full_date[1]-1;
          }
        } else {
          yesterday = data_full_date[0]-1;
          yestermonth = data_full_date[1];
        }

        coronaCountsYest = [];
        for(k = 0; k < states.length; k++){
            coronaCountsYest.push({"state":states[k],"cases":0,"changeInCases":0,"casesChangePerc":0,"deaths":0,"changeInDeaths":0,"deathsChangePerc":0});
        }

        data_full_dateYest = [yesterday,yestermonth,2020];
        print_date_info = [all_months[data_date_month],data_date_day,2020];


        for(j = 0; j < countyData.length; j++){
            for(i = 0; i < coronaCounts.length; i++){
                if (countyData[j]['state'] == coronaCounts[i]['state']){
                    countyData_date = countyData[j]['date'];
                    countyData_date_day = Number(countyData_date.substring(8,10));
                    countyData_date_month = Number(countyData_date.substring(5,7));
                    countyData_full_date = [countyData_date_day, countyData_date_month];
                    if (countyData_full_date[0] == data_full_date[0] && countyData_full_date[1] == data_full_date[1]) {
                        coronaCounts[i]['cases'] = coronaCounts[i]['cases'] + Number(countyData[j]['cases']);
                        coronaCounts[i]['deaths'] = coronaCounts[i]['deaths'] + Number(countyData[j]['deaths']);
                    };
                };
            };
        };
        for(j1 = 0; j1 < countyData2.length; j1++){
            for(i1 = 0; i1 < coronaCountsYest.length; i1++){
                if (countyData[j1]['state'] == coronaCountsYest[i1]['state']){
                    countyData_dateYest = countyData2[j1]['date'];
                    countyData_date_dayYest = Number(countyData_dateYest.substring(8,10));
                    countyData_date_monthYest = Number(countyData_dateYest.substring(5,7));
                    countyData_full_dateYest = [countyData_date_dayYest, countyData_date_monthYest];
                    if (countyData_full_dateYest[0] == data_full_dateYest[0] && countyData_full_dateYest[1] == data_full_dateYest[1]) {
                        coronaCountsYest[i1]['cases'] = coronaCountsYest[i1]['cases'] + Number(countyData2[j1]['cases']);
                        coronaCountsYest[i1]['deaths'] = coronaCountsYest[i1]['deaths'] + Number(countyData2[j1]['deaths']);
                    };
                };
            };
        };
        coronaCounts.splice(2,1); coronaCounts.splice(8,1); coronaCounts.splice(10,1); coronaCounts.splice(34,1); coronaCounts.splice(38,1); coronaCounts.splice(45,1);
        coronaCountsYest.splice(2,1); coronaCountsYest.splice(8,1); coronaCountsYest.splice(10,1); coronaCountsYest.splice(34,1); coronaCountsYest.splice(38,1); coronaCountsYest.splice(45,1);

        totalcases = 0;
        totaldeaths = 0;
        tablehtml = "";
        totalChangeCases = 0;
        totalChangeDeaths = 0;
        casesChangePerc = 0;
        deathsChangePerc = 0;
        for(tc = 0; tc < coronaCounts.length; tc ++){
            totalcases = totalcases + coronaCounts[tc]['cases'];
            totaldeaths = totaldeaths + coronaCounts[tc]['deaths'];
            totalChangeCases = coronaCounts[tc]['cases'] - coronaCountsYest[tc]['cases'];
            coronaCounts[tc]['changeInCases'] = totalChangeCases;
            casesChangePerc = (100*coronaCounts[tc]['changeInCases'] / coronaCounts[tc]['cases']).toFixed(2);
            coronaCounts[tc]['casesChangePerc'] = casesChangePerc;
            totalChangeDeaths = coronaCounts[tc]['deaths'] - coronaCountsYest[tc]['deaths'];
            coronaCounts[tc]['changeInDeaths'] = totalChangeDeaths;
            deathsChangePerc = (100*coronaCounts[tc]['changeInDeaths'] / coronaCounts[tc]['deaths']).toFixed(2);
            coronaCounts[tc]['deathsChangePerc'] = deathsChangePerc;
            tablehtml = tablehtml + "<tr><td>" + coronaCounts[tc]['state'] + "</td><td>" + coronaCounts[tc]['changeInCases'] + "</td><td>" + coronaCounts[tc]['casesChangePerc'] + "%</td><td>" + coronaCounts[tc]['changeInDeaths'] + "</td><td>" + coronaCounts[tc]['deathsChangePerc'] + "%</td></tr>";
        };        


        // for(xy = 0; xy < )

        document.getElementById("addrow").innerHTML = tablehtml;
        document.getElementById("note").innerHTML  = "NOTE: Totals refer to data that includes US territories. The table does not reflect data from these territories. Data is updated to <em><u>" + print_date_info[0] + " " + print_date_info[1] + " " + print_date_info[2] +
      "</u></em> and can be found at <a href= https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html>https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html";
        totalNewCases = 0;
        totalNewDeaths = 0;
        for(x1 = 0; x1 < coronaCounts.length; x1++) {
          totalNewCases = totalNewCases + coronaCounts[x1]['changeInCases'];
          totalNewDeaths = totalNewDeaths + coronaCounts[x1]['changeInDeaths'];
        }
        console.log(coronaCounts);
        document.getElementById("totalcount").innerHTML = "On " + print_date_info[0] + " " + print_date_info[1] + ", " + print_date_info[2] + 
                ", there were <u>" + totalNewCases.toLocaleString() + "</u> new Covid-19 cases and " + "<u>" + 
                  totalNewDeaths.toLocaleString() + "</u> new Covid-19 deaths in the United States";


        // for(u = 0; u < stateData.length; u++) {
        //   stateu = stateData[u]['state'];
        //   for(v = 0; v < coronaCounts.length; v++){
        //     if (stateu == coronaCounts[v]['state']) {
        //       coronaCounts[v]["counts"].push({"date": stateData[u]['date'],"cases":Number(stateData[u]['cases'])});
        //     };
        //   };
        // };
        // coronaCounts.splice(2,1); coronaCounts.splice(8,1); coronaCounts.splice(10,1); coronaCounts.splice(34,1); coronaCounts.splice(38,1); coronaCounts.splice(45,1);
        // htmltext = "";
        // for (xx = 0; xx < coronaCounts.length; xx++){
        //   for( tt = 0; tt < coronaCounts[tt]['counts'].length; tt++){
        //     if (coronaCounts[xx]['counts'][tt] != undefined) {
        //       coronaCounts[xx]['counts'][tt]['date'] = coronaCounts[xx]['counts'][tt]['date'] + " 12:00 AM"
        //       datestring = String(coronaCounts[xx]['counts'][tt]['date']);
        //       newdate = new Date(datestring.substring(0,4),datestring.substring(5,7)-1,datestring.substring(8,10),0,0,0);
        //       coronaCounts[xx]['counts'][tt]['date'] = newdate;
        //       if (coronaCounts[xx]['counts'][tt]['date'].getTimezoneOffset() == 300){
        //         currentdate = coronaCounts[xx]['counts'][tt]['date'];
        //         currentdate1 = String(currentdate).substring(0,30) + "400 (Eastern Daylight Time)";
        //         coronaCounts[xx]['counts'][tt]['date'] = currentdate1;
        //       };
        //     };
        //   };
        //   thishtmltext = "<div class = 'h2class center'>" + coronaCounts[xx]['state'] + "</div><svg id = 'aa" + xx + "' width = '1000' height = '500' style = 'background-color: black'></svg>";
        //   htmltext = htmltext + thishtmltext;
        // };

        // document.getElementById("graphs").innerHTML = htmltext;
        // for (ww = 0; ww < coronaCounts.length; ww++){
        //   var svg = d3.select("#aa" + ww );
        //   var width = 1000;
        //   var height = 500;
        //   var margin = { top: 20, right: 40, bottom: 40, left:75};
        //   var chartWidth = width - margin.left - margin.right;
        //   var chartHeight = height - margin.top - margin.bottom;
        //   var map = svg.append("g").attr("transform","translate("+margin.left+","+margin.top+")");
        //   for (qq = 0; qq < coronaCounts[ww]['counts'].length; qq++){
        //     thisdate = String(coronaCounts[ww]['counts'][qq]['date']);
        //     var newdate1;
        //     if (thisdate.substring(0,4) == "2020"){
        //       newdate1 = new Date(thisdate.substring(0,4),thisdate.substring(5,7)-1,thisdate.substring(8,10),0,0,0);
        //     } else {
        //       all_months1 = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        //       monthdate = thisdate.substring(4,7);
        //       daydate = thisdate.substring(8,10);
        //       yeardate = thisdate.substring(11,15);
        //       monthdateindex = all_months1.indexOf(monthdate);
        //       newdate1 = new Date(yeardate,monthdateindex,daydate,0,0,0);
        //     }
        //     coronaCounts[ww]['counts'][qq]['date'] = newdate1;
        //     if (coronaCounts[ww]['counts'][qq]['date'].getTimezoneOffset() == 300){
        //       currentdate = coronaCounts[ww]['counts'][qq]['date'];
        //       currentdate1 = String(currentdate).substring(0,30) + "400 (Eastern Daylight Time)";
        //       coronaCounts[ww]['counts'][qq]['date'] = new Date(currentdate1);
        //     };
        //   };
        //   console.log(coronaCounts);
        //   let xScale = d3.scaleTime().domain([ coronaCounts[ww]['counts'][0]['date'] , coronaCounts[ww]['counts'][coronaCounts[ww]['counts'].length-1]['date'] ]).range([margin.left,chartWidth+margin.left]);
        //   let yScale = d3.scaleLinear().domain([0,coronaCounts[ww]['counts'][coronaCounts[ww]['counts'].length-1]['cases']]).range([chartHeight,margin.top]);
        //   let leftAxis = d3.axisLeft(yScale);
        //   svg.append("g").attr("transform","translate("+(margin.left)+","+margin.top+")")
        //     .call(leftAxis);
        //   let bottomAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.timeFormat("%b %d"));
        //   // .ticks(d3.timeDay.every(5))
        //   let bottomElement = svg.append("g").attr("transform","translate("+(0)+","+(chartHeight+margin.top)+")");
        //   bottomAxis(bottomElement);
        //   coronaCounts[ww]['counts'].forEach( (d, i) => {
        //     svg.append("line")
        //       .attr("x1",xScale(d['date']))
        //       .attr("x2",xScale(d['date']))
        //       .attr("y1",yScale(0)+margin.top)
        //       .attr("y2",yScale(d['cases'])+margin.top) 
        //       .style("stroke-width",5)
        //       .style("stroke","#73cffe");
        //   });
        // };
      //   document.getElementById("addrow").innerHTML = tablehtml;
      //   document.getElementById("totalcount").innerHTML = "As of " + print_date_info[0] + " " + print_date_info[1] + ", " + print_date_info[2] + ", there are <u>" + totalcases.toLocaleString() + "</u> COVID-19 CASES and " + "<u>" + totaldeaths.toLocaleString() + "</u> COVID-19 DEATHS in the United States";
      //   document.getElementById("note").innerHTML = "NOTE: Totals refer to data that includes US territories. The table does not reflect data from these territories. Data is updated to <em><u>" + print_date_info[0] + " " + print_date_info[1] + " " + print_date_info[2] +
      // "</u></em> and can be found at <a href= https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html>https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html";
    };
    requestData();
    </script>
  <div class = "margin25"></div>
  <div class = "footerstay">
    <p class = "nottitle footer"><strong>Last Updated April 2020</strong></p>
  </div>
  </body>
</html>